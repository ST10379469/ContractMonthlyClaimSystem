@model MonthlyClaim
@{
    ViewData["Title"] = "Create New Claim";
}

<h2 class="mb-4">Submit New Monthly Claim</h2>

<div class="card shadow-sm">
    <div class="card-header bg-primary text-white">
        <h4 class="mb-0">Claim Information</h4>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" enctype="multipart/form-data" id="claimForm">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        <label asp-for="Month" class="form-label fw-bold">Month</label>
                        <select asp-for="Month" class="form-select" id="monthSelect">
                            <option value="">Select Month</option>
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i">@System.Globalization.DateTimeFormatInfo.CurrentInfo.GetMonthName(i)</option>
                            }
                        </select>
                        <span asp-validation-for="Month" class="text-danger small"></span>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group mb-3">
                        <label asp-for="Year" class="form-label fw-bold">Year</label>
                        <select asp-for="Year" class="form-select" id="yearSelect">
                            <option value="">Select Year</option>
                            @for (int i = DateTime.Now.Year - 1; i <= DateTime.Now.Year + 1; i++)
                            {
                                <option value="@i" selected="@(i == DateTime.Now.Year)">@i</option>
                            }
                        </select>
                        <span asp-validation-for="Year" class="text-danger small"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="alert alert-info">
                        <small>You can submit claims for previous months up to 1 year back.</small>
                    </div>
                </div>
            </div>

            <!-- Claim Items Section -->
            <div class="mt-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="text-primary">Claim Items</h4>
                    <button type="button" class="btn btn-success btn-sm" onclick="addRow()">
                        <i class="fas fa-plus"></i> Add Item
                    </button>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="claimItemsTable">
                        <thead class="table-light">
                            <tr>
                                <th>Date</th>
                                <th>Hours Worked</th>
                                <th>Module</th>
                                <th>Description</th>
                                <th>Hourly Rate ($)</th>
                                <th>Amount</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="claim-item-row">
                                <td>
                                    <input type="date" class="form-control form-control-sm" name="ClaimItems[0].Date"
                                           onchange="calculateAmount(this)" required />
                                </td>
                                <td>
                                    <input type="number" step="0.1" min="0.1" max="24" class="form-control form-control-sm"
                                           name="ClaimItems[0].HoursWorked" onchange="calculateAmount(this)" required />
                                </td>
                                <td>
                                    <input type="text" class="form-control form-control-sm" name="ClaimItems[0].Module"
                                           placeholder="e.g., CS101" required />
                                </td>
                                <td>
                                    <textarea class="form-control form-control-sm" name="ClaimItems[0].Description"
                                              rows="1" placeholder="Activity description"></textarea>
                                </td>
                                <td>
                                    <input type="number" step="0.01" min="0" class="form-control form-control-sm hourly-rate"
                                           name="ClaimItems[0].HourlyRate" value="50.00" onchange="calculateAmount(this)" required />
                                </td>
                                <td>
                                    <input type="number" step="0.01" class="form-control form-control-sm amount"
                                           name="ClaimItems[0].Amount" readonly />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)" disabled>
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Supporting Documents Section -->
            <div class="mt-4">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Supporting Documents</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Upload Supporting Documents</label>
                            <input type="file" class="form-control" id="fileUpload" multiple
                                   accept=".pdf,.docx,.xlsx,.jpg,.png" />
                            <div class="form-text">
                                Supported formats: PDF, Word, Excel, JPG, PNG (Max: 5MB per file)
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-primary" onclick="uploadFile()">
                            <i class="fas fa-upload"></i> Upload Files
                        </button>

                        <div id="uploadedFiles" class="mt-3">
                            <div class="alert alert-info">
                                <small>No documents uploaded yet. Upload supporting documents for your claim.</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Total Amount Display -->
            <div class="mt-4 p-3 bg-light rounded">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <h4 class="mb-0">Total Claim Amount: <span id="totalAmount" class="text-success">$0.00</span></h4>
                    </div>
                    <div class="col-md-6 text-end">
                        <div class="btn-group">
                            <button type="submit" name="action" value="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-paper-plane"></i> Submit Claim
                            </button>
                            <button type="submit" name="action" value="save" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-save"></i> Save Draft
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let rowCount = 1;
        const uploadedFiles = [];

        function addRow() {
            const table = document.getElementById('claimItemsTable');
            const tbody = table.querySelector('tbody');
            const newRow = tbody.querySelector('tr').cloneNode(true);

            // Update indices
            newRow.querySelectorAll('input, textarea').forEach(input => {
                const name = input.name.replace('[0]', `[${rowCount}]`);
                input.name = name;
                input.value = '';

                if (input.classList.contains('amount')) {
                    input.value = '0.00';
                } else if (input.classList.contains('hourly-rate')) {
                    input.value = '50.00';
                }
            });

            // Enable remove button for new row
            newRow.querySelector('.btn-danger').disabled = false;

            tbody.appendChild(newRow);
            rowCount++;
            updateRemoveButtons();
        }

        function removeRow(button) {
            const row = button.closest('tr');
            if (document.getElementById('claimItemsTable').rows.length > 2) {
                row.remove();
                recalculateAllAmounts();
                updateRemoveButtons();
            }
        }

        function updateRemoveButtons() {
            const rows = document.querySelectorAll('.claim-item-row');
            const removeButtons = document.querySelectorAll('.btn-danger');

            if (rows.length === 1) {
                removeButtons[0].disabled = true;
            } else {
                removeButtons.forEach(btn => btn.disabled = false);
            }
        }

        function calculateAmount(element) {
            const row = element.closest('tr');
            const hours = parseFloat(row.querySelector('input[name*="HoursWorked"]').value) || 0;
            const rate = parseFloat(row.querySelector('.hourly-rate').value) || 0;
            const amount = hours * rate;

            row.querySelector('.amount').value = amount.toFixed(2);
            calculateTotal();
        }

        function recalculateAllAmounts() {
            document.querySelectorAll('.claim-item-row').forEach(row => {
                const hours = parseFloat(row.querySelector('input[name*="HoursWorked"]').value) || 0;
                const rate = parseFloat(row.querySelector('.hourly-rate').value) || 0;
                const amount = hours * rate;
                row.querySelector('.amount').value = amount.toFixed(2);
            });
            calculateTotal();
        }

        function calculateTotal() {
            let total = 0;
            document.querySelectorAll('.amount').forEach(input => {
                total += parseFloat(input.value) || 0;
            });
            document.getElementById('totalAmount').textContent = '$' + total.toFixed(2);
        }

        function uploadFile() {
            const fileInput = document.getElementById('fileUpload');
            const uploadedFilesDiv = document.getElementById('uploadedFiles');

            if (fileInput.files.length > 0) {
                Array.from(fileInput.files).forEach(file => {
                    // Check file size (5MB limit)
                    if (file.size > 5 * 1024 * 1024) {
                        alert(`File "${file.name}" exceeds 5MB limit.`);
                        return;
                    }

                    // Check file type
                    const allowedTypes = ['.pdf', '.docx', '.xlsx', '.jpg', '.png', '.jpeg'];
                    const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                    if (!allowedTypes.includes(fileExtension)) {
                        alert(`File type "${fileExtension}" is not supported.`);
                        return;
                    }

                    uploadedFiles.push(file);

                    // Create file display element
                    const fileElement = document.createElement('div');
                    fileElement.className = 'd-flex justify-content-between align-items-center p-2 border rounded mb-2';
                    fileElement.innerHTML = `
                        <div>
                            <i class="fas fa-file text-primary me-2"></i>
                            <span class="file-name">${file.name}</span>
                            <small class="text-muted ms-2">(${(file.size / 1024 / 1024).toFixed(2)} MB)</small>
                        </div>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeFile('${file.name}')">
                            <i class="fas fa-times"></i>
                        </button>
                        <input type="hidden" name="SupportingDocuments" value="${file.name}" />
                    `;

                    // Remove initial message if present
                    if (uploadedFilesDiv.querySelector('.alert')) {
                        uploadedFilesDiv.innerHTML = '';
                    }

                    uploadedFilesDiv.appendChild(fileElement);
                });

                fileInput.value = '';
            }
        }

        function removeFile(fileName) {
            const index = uploadedFiles.findIndex(file => file.name === fileName);
            if (index > -1) {
                uploadedFiles.splice(index, 1);
            }

            // Re-render uploaded files
            const uploadedFilesDiv = document.getElementById('uploadedFiles');
            uploadedFilesDiv.innerHTML = '';

            if (uploadedFiles.length === 0) {
                uploadedFilesDiv.innerHTML = '<div class="alert alert-info"><small>No documents uploaded yet. Upload supporting documents for your claim.</small></div>';
            } else {
                uploadedFiles.forEach(file => {
                    const fileElement = document.createElement('div');
                    fileElement.className = 'd-flex justify-content-between align-items-center p-2 border rounded mb-2';
                    fileElement.innerHTML = `
                        <div>
                            <i class="fas fa-file text-primary me-2"></i>
                            <span class="file-name">${file.name}</span>
                            <small class="text-muted ms-2">(${(file.size / 1024 / 1024).toFixed(2)} MB)</small>
                        </div>
                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeFile('${file.name}')">
                            <i class="fas fa-times"></i>
                        </button>
                        <input type="hidden" name="SupportingDocuments" value="${file.name}" />
                    `;
                    uploadedFilesDiv.appendChild(fileElement);
                });
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            calculateTotal();
            updateRemoveButtons();
        });
    </script>
}